{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list-component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","monsters","map","SearchBox","type","placeholder","value","searchField","onChange","handleChange","App","e","setState","target","state","fetch","then","res","json","users","this","filteredMonsters","filter","toLowerCase","trim","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6TAIaA,EAAO,SAACC,GACpB,OACC,sBAAKC,UAAU,iBAAf,UACC,qBACCC,IAAI,UACJC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,4BAEJ,6BAAKL,EAAMI,QAAQE,OACnB,4BAAIN,EAAMI,QAAQG,YCPRC,G,MAAW,SAACR,GACxB,OACC,qBAAKC,UAAU,YAAf,SACED,EAAMS,SAASC,KAAI,SAACN,GAAD,OACnB,cAAC,EAAD,CAAMA,QAASA,GAAcA,EAAQC,WCL5BM,G,MAAY,SAACX,GACzB,OACC,uBACCY,KAAK,SACLX,UAAU,SACVY,YAAab,EAAMa,YACnBC,MAAOd,EAAMe,YACbC,SAAUhB,EAAMiB,iBCuCJC,G,wDA3Cd,aAAe,IAAD,8BACb,gBAcDD,aAAe,SAACE,GACf,EAAKC,SAAS,CACbL,YAAaI,EAAEE,OAAOP,SAdvB,EAAKQ,MAAQ,CACZb,SAAU,GACVM,YAAa,IALD,E,qDASd,WAAqB,IAAD,OACnBQ,MAAM,8CACJC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GAAD,OAAW,EAAKP,SAAS,CAAEX,SAAUkB,S,oBAS7C,WAAU,IAAD,EAC0BC,KAAKN,MAA/Bb,EADA,EACAA,SAAUM,EADV,EACUA,YACZc,EAAmBpB,EAASqB,QAAO,SAAC1B,GAAD,OACxCA,EAAQE,KACNyB,cACAC,OACAC,SAASlB,EAAYgB,cAAcC,WAEtC,OACC,sBAAK/B,UAAU,MAAf,UACC,oDACA,cAAC,EAAD,CACCgB,aAAcW,KAAKX,aACnBF,YAAaA,EACbF,YAAY,oBAEb,cAAC,EAAD,CAAUJ,SAAUoB,W,GAtCNK,cCMHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.01c15cba.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport './card.styles.css';\r\n\r\nexport const Card = (props) => {\r\n\treturn (\r\n\t\t<div className=\"card-container\">\r\n\t\t\t<img\r\n\t\t\t\talt=\"monster\"\r\n\t\t\t\tsrc={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`}\r\n\t\t\t/>\r\n\t\t\t<h2>{props.monster.name}</h2>\r\n\t\t\t<p>{props.monster.email}</p>\r\n\t\t</div>\r\n\t);\r\n};\r\n","import React from 'react';\r\nimport { Card } from '../card/card.component';\r\n\r\nimport './card-list.styles.css';\r\n\r\nexport const CardList = (props) => {\r\n\treturn (\r\n\t\t<div className=\"card-list\">\r\n\t\t\t{props.monsters.map((monster) => (\r\n\t\t\t\t<Card monster={monster} key={monster.id}></Card>\r\n\t\t\t))}\r\n\t\t</div>\r\n\t);\r\n};\r\n","import React from 'react';\r\n\r\nimport './search-box.styles.css';\r\n\r\nexport const SearchBox = (props) => {\r\n\treturn (\r\n\t\t<input\r\n\t\t\ttype=\"search\"\r\n\t\t\tclassName=\"search\"\r\n\t\t\tplaceholder={props.placeholder}\r\n\t\t\tvalue={props.searchField}\r\n\t\t\tonChange={props.handleChange}\r\n\t\t/>\r\n\t);\r\n};\r\n","import React, { Component } from 'react';\nimport { CardList } from './components/card-list/card-list-component';\nimport { SearchBox } from './components/search-box/search-box.component';\n\nimport './App.css';\n\nclass App extends Component {\n\tconstructor() {\n\t\tsuper();\n\n\t\tthis.state = {\n\t\t\tmonsters: [],\n\t\t\tsearchField: ''\n\t\t};\n\t}\n\n\tcomponentDidMount() {\n\t\tfetch('https://jsonplaceholder.typicode.com/users')\n\t\t\t.then((res) => res.json())\n\t\t\t.then((users) => this.setState({ monsters: users }));\n\t}\n\n\thandleChange = (e) => {\n\t\tthis.setState({\n\t\t\tsearchField: e.target.value\n\t\t});\n\t};\n\n\trender() {\n\t\tconst { monsters, searchField } = this.state;\n\t\tconst filteredMonsters = monsters.filter((monster) =>\n\t\t\tmonster.name\n\t\t\t\t.toLowerCase()\n\t\t\t\t.trim()\n\t\t\t\t.includes(searchField.toLowerCase().trim())\n\t\t);\n\t\treturn (\n\t\t\t<div className=\"App\">\n\t\t\t\t<h1> Monsters Rolodex </h1>\n\t\t\t\t<SearchBox\n\t\t\t\t\thandleChange={this.handleChange}\n\t\t\t\t\tsearchField={searchField}\n\t\t\t\t\tplaceholder=\"Search Monsters\"\n\t\t\t\t/>\n\t\t\t\t<CardList monsters={filteredMonsters} />\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}